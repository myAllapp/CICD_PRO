# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Run tests
        run: echo Run lint
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Checkout the code
#        uses: actions/checkout@v2

      # Runs a single command using the runners shell
#      - name: Run lint
#        run: ./gradlew lintDebug

      # Runs a set of commands using the runners shell
#      - name: Upload html test report
#        uses: actions/upload-artifact@v2
#        with:
#          name: lint.html
#          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: echo Run unit test
#      - name: Checkout the code
#        uses: actions/checkout@v2
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v2
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/
                   
  instrumentation-test:
      needs: [unit-test]
      runs-on: macos-latest
      steps:
        - name: Run tests
          run: echo Run instrumentation test
#        - name: Checkout the code
#          uses: actions/checkout@v2
#
#        - name: Run espresso tests
#          uses: reactivecircus/android-emulator-runner@v2
#          with:
#            api-level: 29
#            script: ./gradlew connectedCheck
#
#        - name: Upload test report
#          uses: actions/upload-artifact@v2
#          with:
#            name: instrumentation_test_report
#            path: app/build/reports/androidTests/connected/

  static_code_analysis:
      needs: [instrumentation-test]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v2

        - name: set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 11

        - name: SonarCloude Scan
          run: ./gradlew app:sonarqube -Dsonar.login=${{secrets.SONAR_CLOUDE_TOKEN}}
          env:
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}





